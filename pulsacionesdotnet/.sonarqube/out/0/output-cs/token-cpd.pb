–
wC:\Users\david\OneDrive\Documentos\GitHub\PulsacionesAngular\pulsacionesdotnet\Controllers\WeatherForecastController.cs
	namespace 	
pulsacionesdotnet
 
. 
Controllers '
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
var 
rng 
= 
new 
Random  
(  !
)! "
;" #
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date   
=   
DateTime   
.    
Now    #
.  # $
AddDays  $ +
(  + ,
index  , 1
)  1 2
,  2 3
TemperatureC!! 
=!! 
rng!! "
.!!" #
Next!!# '
(!!' (
-!!( )
$num!!) +
,!!+ ,
$num!!- /
)!!/ 0
,!!0 1
Summary"" 
="" 
	Summaries"" #
[""# $
rng""$ '
.""' (
Next""( ,
("", -
	Summaries""- 6
.""6 7
Length""7 =
)""= >
]""> ?
}## 
)## 
.$$ 
ToArray$$ 
($$ 
)$$ 
;$$ 
}%% 	
}&& 
}'' ²
dC:\Users\david\OneDrive\Documentos\GitHub\PulsacionesAngular\pulsacionesdotnet\Pages\Error.cshtml.cs
	namespace

 	
pulsacionesdotnet


 
.

 
Pages

 !
{ 
[ 
ResponseCache 
( 
Duration 
= 
$num 
,  
Location! )
=* +!
ResponseCacheLocation, A
.A B
NoneB F
,F G
NoStoreH O
=P Q
trueR V
)V W
]W X
public 

class 

ErrorModel 
: 
	PageModel '
{ 
private 
readonly 
ILogger  
<  !

ErrorModel! +
>+ ,
_logger- 4
;4 5
public 

ErrorModel 
( 
ILogger !
<! "

ErrorModel" ,
>, -
logger. 4
)4 5
{ 	
_logger 
= 
logger 
; 
} 	
public 
string 
	RequestId 
{  !
get" %
;% &
set' *
;* +
}, -
public 
bool 
ShowRequestId !
=>" $
!% &
string& ,
., -
IsNullOrEmpty- :
(: ;
	RequestId; D
)D E
;E F
public 
void 
OnGet 
( 
) 
{ 	
	RequestId 
= 
Activity  
.  !
Current! (
?( )
.) *
Id* ,
??- /
HttpContext0 ;
.; <
TraceIdentifier< K
;K L
} 	
} 
} ¸

YC:\Users\david\OneDrive\Documentos\GitHub\PulsacionesAngular\pulsacionesdotnet\Program.cs
	namespace

 	
pulsacionesdotnet


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} Õ
YC:\Users\david\OneDrive\Documentos\GitHub\PulsacionesAngular\pulsacionesdotnet\Startup.cs
	namespace		 	
pulsacionesdotnet		
 
{

 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. #
AddControllersWithViews ,
(, -
)- .
;. /
services 
. 
AddSpaStaticFiles &
(& '
configuration' 4
=>5 7
{ 
configuration 
. 
RootPath &
=' (
$str) 9
;9 :
} 
) 
; 
} 	
public   
void   
	Configure   
(   
IApplicationBuilder   1
app  2 5
,  5 6
IWebHostEnvironment  7 J
env  K N
)  N O
{!! 	
if"" 
("" 
env"" 
."" 
IsDevelopment"" !
(""! "
)""" #
)""# $
{## 
app$$ 
.$$ %
UseDeveloperExceptionPage$$ -
($$- .
)$$. /
;$$/ 0
}%% 
else&& 
{'' 
app(( 
.(( 
UseExceptionHandler(( '
(((' (
$str((( 0
)((0 1
;((1 2
app** 
.** 
UseHsts** 
(** 
)** 
;** 
}++ 
app-- 
.-- 
UseHttpsRedirection-- #
(--# $
)--$ %
;--% &
app.. 
... 
UseStaticFiles.. 
(.. 
)..  
;..  !
if// 
(// 
!// 
env// 
.// 
IsDevelopment// "
(//" #
)//# $
)//$ %
{00 
app11 
.11 
UseSpaStaticFiles11 %
(11% &
)11& '
;11' (
}22 
app44 
.44 

UseRouting44 
(44 
)44 
;44 
app66 
.66 
UseEndpoints66 
(66 
	endpoints66 &
=>66' )
{77 
	endpoints88 
.88 
MapControllerRoute88 ,
(88, -
name99 
:99 
$str99 #
,99# $
pattern:: 
::: 
$str:: @
)::@ A
;::A B
};; 
);; 
;;; 
app== 
.== 
UseSpa== 
(== 
spa== 
=>== 
{>> 
spaBB 
.BB 
OptionsBB 
.BB 

SourcePathBB &
=BB' (
$strBB) 4
;BB4 5
ifDD 
(DD 
envDD 
.DD 
IsDevelopmentDD %
(DD% &
)DD& '
)DD' (
{EE 
spaFF 
.FF 
UseAngularCliServerFF +
(FF+ ,
	npmScriptFF, 5
:FF5 6
$strFF7 >
)FF> ?
;FF? @
}GG 
}HH 
)HH 
;HH 
}II 	
}JJ 
}KK ì
aC:\Users\david\OneDrive\Documentos\GitHub\PulsacionesAngular\pulsacionesdotnet\WeatherForecast.cs
	namespace 	
pulsacionesdotnet
 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 